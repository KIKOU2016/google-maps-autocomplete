var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Location.html",[0,1.569,1,0.901]],["body/interfaces/Location.html",[0,2.243,1,1.516,2,3.549,3,1.068,4,1.289,5,1.068,6,3.549,7,0.875,8,1.516,9,2.393,10,2.393,11,3.68,12,1.03,13,0.07,14,1.068,15,0.052,16,0.061,17,0.052]],["title/components/MatGoogleMapsAutocompleteComponent.html",[18,1.298,19,1.081]],["body/components/MatGoogleMapsAutocompleteComponent.html",[1,0.477,3,0.396,4,0.477,5,0.396,7,0.324,8,0.758,9,0.687,10,0.687,12,1.1,13,0.073,14,0.628,15,0.038,16,0.031,17,0.019,18,1.358,19,1.288,20,1.625,21,1.023,22,1.315,23,1.315,24,1.023,25,3.538,26,1.693,27,1.693,28,1.023,29,1.092,30,1.641,31,0.687,32,1.625,33,1.092,34,1.686,35,2.011,36,1.546,37,1.625,38,2.597,39,1.625,40,2.088,41,1.783,42,2.02,43,1.717,44,2.02,45,2.02,46,2.597,47,0.91,48,2.301,49,1.869,50,2.088,51,2.957,52,1.092,53,1.561,54,2.51,55,1.496,56,2.17,57,1.686,58,2.51,59,2.02,60,1.869,61,2.51,62,1.869,63,2.17,64,1.625,65,1.358,66,1.641,67,1.641,68,0.687,69,1.315,70,2.301,71,2.02,72,1.869,73,1.644,74,1.315,75,0.91,76,1.171,77,0.758,78,2.088,79,1.546,80,2.172,81,1.315,82,2.011,83,1.158,84,1.315,85,1.625,86,1.315,87,1.315,88,1.315,89,1.358,90,1.315,91,1.625,92,1.625,93,1.315,94,1.869,95,1.315,96,1.625,97,1.315,98,1.315,99,1.315,100,1.315,101,2.2,102,1.315,103,1.315,104,1.315,105,1.315,106,1.074,107,1.686,108,1.315,109,2.088,110,1.315,111,1.358,112,1.315,113,2.02,114,2.061,115,1.625,116,1.247,117,1.625,118,1.625,119,1.625,120,1.315,121,1.034,122,1.315,123,1.315,124,2.02,125,1.023,126,2.088,127,1.315,128,1.083,129,2.2,130,1.869,131,1.315,132,0.396,133,1.023,134,0.477,135,0.573,136,0.831,137,0.687,138,0.831,139,0.831,140,0.687,141,1.023,142,1.315,143,1.319,144,1.319,145,1.319,146,1.319,147,0.477,148,1.023,149,1.023,150,2.02,151,1.319,152,0.831,153,2.301,154,1.023,155,1.023,156,1.625,157,1.023,158,1.625,159,1.625,160,1.625,161,1.625,162,1.625,163,1.023,164,1.023,165,1.625,166,1.023,167,1.023,168,1.315,169,1.023,170,1.315,171,1.023,172,1.023,173,1.869,174,1.023,175,1.023,176,1.625,177,1.023,178,0.477,179,1.023,180,1.023,181,1.023,182,1.023,183,1.023,184,1.319,185,1.023,186,1.023,187,1.023,188,1.023,189,1.023,190,1.023,191,1.023,192,1.023,193,1.315,194,1.315,195,1.315,196,0.831,197,2.088,198,1.023,199,0.831,200,1.319,201,1.625,202,0.396,203,2.957,204,1.315,205,0.573,206,0.573,207,1.315,208,1.023,209,1.315]],["title/directives/MatGoogleMapsAutocompleteDirective.html",[202,0.747,206,1.081]],["body/directives/MatGoogleMapsAutocompleteDirective.html",[1,0.585,3,0.485,4,0.585,5,0.485,7,0.397,8,0.888,9,0.842,10,0.842,12,1.134,13,0.073,14,0.485,15,0.043,16,0.036,17,0.024,26,1.662,27,1.662,29,1.278,30,1.867,31,0.842,32,1.253,33,1.544,34,1.278,36,0.842,41,1.931,42,2.298,43,1.69,44,2.298,45,2.298,47,1.065,48,2.566,49,2.084,52,1.278,53,1.355,56,2.358,57,1.854,60,2.084,62,2.084,63,2.24,64,1.902,65,1.544,66,1.867,67,1.867,68,0.842,70,3.246,71,2.298,72,2.084,73,1.653,75,0.702,76,0.585,77,0.585,79,1.724,80,2.297,82,1.724,83,0.993,89,0.842,94,2.084,101,2.297,106,0.888,107,1.544,111,0.842,113,2.298,114,2.181,115,1.902,116,1.287,117,1.902,118,1.902,119,1.902,121,1.067,124,2.758,125,1.253,128,1.202,129,2.139,130,2.084,132,0.485,133,1.253,134,0.585,135,0.702,136,1.018,137,0.842,138,1.018,139,1.018,140,0.842,141,1.253,147,0.585,149,1.253,150,2.298,151,1.545,152,1.018,153,2.566,154,1.253,155,1.253,156,1.902,157,1.253,158,1.902,159,1.902,160,1.902,161,1.902,162,1.902,163,1.253,164,1.253,165,1.902,166,1.253,167,1.253,169,1.253,171,1.253,172,1.253,173,1.867,174,1.253,175,1.253,176,1.902,177,1.253,178,0.585,179,1.253,180,1.253,181,1.253,182,1.253,183,1.253,184,1.018,185,1.253,186,1.253,188,1.253,189,1.253,190,1.253,191,1.253,192,1.253,202,0.736,205,0.702,206,1.065,210,4.575,211,1.611,212,3.545,213,3.297,214,1.611,215,1.611,216,1.611,217,1.611,218,1.611,219,1.611,220,1.611,221,1.611,222,1.611,223,1.611,224,1.611,225,1.611,226,1.611,227,1.611,228,1.611,229,1.611,230,1.611,231,1.611,232,1.611,233,1.611,234,1.611,235,1.611,236,1.611,237,1.611,238,1.018,239,1.611,240,1.611,241,1.611,242,1.611]],["title/modules/MatGoogleMapsAutocompleteModule.html",[243,1.081,244,0.901]],["body/modules/MatGoogleMapsAutocompleteModule.html",[1,0.948,3,0.786,4,0.948,5,0.786,13,0.072,14,1.344,15,0.038,16,0.051,17,0.038,19,2.058,26,1.59,27,1.59,41,1.137,47,1.137,53,1.401,55,1.137,73,0.948,106,0.948,121,1.429,128,1.344,132,0.786,134,0.948,136,2.437,137,2.016,138,2.437,139,1.65,147,0.948,178,0.948,199,1.65,206,2.058,238,1.65,243,1.137,244,1.724,245,1.137,246,0.948,247,2.437,248,1.65,249,2.177,250,3.001,251,2.031,252,2.031,253,2.031,254,2.177,255,2.031,256,1.365,257,3.445,258,2.61,259,3.445,260,3.856,261,2.61,262,3.856,263,3.445,264,3.001,265,3.445,266,3.445,267,3.445,268,1.65,269,3.445,270,3.445,271,3.445,272,3.445,273,2.61,274,2.031,275,2.031]],["title/directives/MatValidateAddressDirective.html",[121,0.747,202,0.747]],["body/directives/MatValidateAddressDirective.html",[3,0.718,4,0.866,5,0.718,7,0.588,8,1.177,12,0.909,13,0.073,14,0.718,15,0.035,16,0.048,17,0.035,29,1.695,31,1.246,34,1.695,35,1.695,41,2.018,43,1.605,47,1.413,53,1.711,68,1.926,73,1.613,75,1.413,76,1.177,77,1.177,79,2.067,83,0.976,89,1.246,101,2.162,106,1.436,107,1.926,116,0.866,121,1.19,128,1.109,132,0.718,134,0.866,137,2.354,140,1.246,147,0.866,178,1.338,184,2.049,202,0.976,205,1.039,208,2.523,249,2.049,276,4.503,277,2.384,278,3.684,279,2.523,280,3.684,281,3.242,282,3.684,283,3.242,284,3.242,285,3.684,286,3.684,287,3.242,288,3.954,289,3.954,290,3.242,291,3.242,292,3.242,293,2.384,294,2.384,295,2.384,296,3.684,297,2.384,298,2.384,299,2.384,300,2.384,301,2.384,302,3.242,303,3.242,304,2.384,305,1.855,306,2.384,307,1.855,308,2.384,309,2.384,310,2.384,311,3.242,312,1.855,313,2.384]],["title/injectables/MockNgZone.html",[314,1.569,315,1.931]],["body/injectables/MockNgZone.html",[3,0.83,4,1.002,5,0.83,7,0.68,8,1.297,12,0.977,13,0.072,14,0.83,15,0.041,16,0.053,17,0.041,43,1.202,47,1.556,68,2.071,72,2.743,73,1.576,75,1.556,76,1.297,77,1.297,82,1.442,83,0.83,101,2.071,106,1.439,107,1.867,114,1.867,128,0.83,132,0.83,147,1.002,178,1.297,256,1.867,307,2.146,314,2.257,315,2.779,316,2.758,317,4.446,318,3.459,319,2.758,320,2.146,321,3.571,322,3.571,323,3.571,324,2.779,325,3.571,326,4.339,327,3.571,328,3.571,329,2.257,330,3.571,331,3.571,332,2.758,333,2.779,334,3.571,335,4.189,336,3.571,337,3.571,338,3.459,339,2.758,340,4.189,341,3.571,342,2.758,343,2.758,344,3.571,345,2.146,346,2.758,347,2.758]],["title/changelog.html",[348,1.328,349,1.328,350,2.1]],["body/changelog.html",[12,0.495,13,0.054,15,0.03,16,0.042,17,0.03,19,0.874,26,1.044,27,1.044,31,1.049,33,1.503,35,1.756,36,1.756,52,1.049,53,1.044,55,0.874,57,1.049,65,1.049,83,0.865,114,1.049,116,0.729,121,0.604,128,0.604,129,1.503,135,0.874,198,2.237,200,1.268,202,0.865,243,1.253,244,0.729,245,0.874,246,1.545,305,1.561,329,1.817,345,1.561,351,2.007,352,2.237,353,2.007,354,2.875,355,4.039,356,4.039,357,3.555,358,2.875,359,1.561,360,1.817,361,2.007,362,2.007,363,4.723,364,2.923,365,2.007,366,2.007,367,3.143,368,2.875,369,3.882,370,2.007,371,2.532,372,4.495,373,2.007,374,2.007,375,1.561,376,2.007,377,2.007,378,2.875,379,2.875,380,3.359,381,2.007,382,2.007,383,2.007,384,2.875,385,3.359,386,2.007,387,2.007,388,2.007,389,2.007,390,4.16,391,2.007,392,1.561,393,2.007,394,2.007,395,2.875,396,1.561,397,3.021,398,2.007,399,2.007,400,2.875,401,2.007,402,2.875,403,2.007,404,2.007,405,2.875,406,2.875,407,2.007,408,2.007,409,2.007,410,2.007,411,2.007,412,2.007,413,2.007,414,2.007,415,2.007,416,2.007,417,2.875,418,2.007,419,2.007,420,2.007,421,2.007,422,2.007,423,2.007,424,2.007,425,2.007,426,2.007,427,2.007,428,2.007,429,2.007,430,2.007,431,1.817,432,2.007,433,2.007,434,2.007,435,3.237,436,2.007,437,2.007,438,2.007,439,2.007,440,2.237,441,2.007,442,2.875,443,2.875,444,2.007,445,1.561,446,2.007,447,2.007,448,2.237,449,2.237,450,2.875,451,2.007,452,2.007,453,2.007,454,2.007,455,2.007,456,2.007,457,1.561,458,2.007,459,2.007,460,2.007,461,2.237,462,2.007,463,2.007,464,1.561,465,2.007,466,2.007,467,2.007,468,3.359,469,2.007,470,2.007,471,2.007,472,2.007,473,2.875,474,2.007,475,2.007,476,2.007,477,2.007,478,2.007,479,2.007,480,2.007,481,2.007,482,2.007,483,2.007,484,2.007,485,1.561,486,1.561,487,1.561,488,2.007,489,2.007,490,2.875,491,2.007,492,1.561,493,2.007,494,1.561,495,2.007,496,2.007,497,2.007,498,2.007,499,2.007,500,2.007]],["title/dependencies.html",[246,1.078,371,1.098]],["body/dependencies.html",[13,0.071,15,0.053,16,0.062,17,0.053,132,1.091,134,1.317,135,1.58,238,2.291,246,1.317,268,2.291,494,2.821,501,2.821,502,2.821,503,4.608,504,2.821,505,4.226]],["title/miscellaneous/enumerations.html",[506,1.098,507,2.311]],["body/miscellaneous/enumerations.html",[7,0.882,13,0.07,15,0.053,16,0.062,17,0.053,25,2.781,26,1.522,27,1.522,28,3.261,55,1.826,83,1.381,143,2.649,144,2.649,145,2.649,146,2.649,506,1.869,507,2.781,508,3.574]],["title/miscellaneous/functions.html",[506,1.098,509,2.311]],["body/miscellaneous/functions.html",[7,0.766,12,0.949,13,0.071,15,0.046,16,0.057,17,0.046,24,2.995,75,1.906,76,1.664,77,1.589,80,2.013,106,1.664,116,1.398,151,2.433,196,1.962,338,2.995,364,1.962,371,2.013,506,1.623,509,2.415,510,3.849,511,4.583,512,4.184,513,3.849,514,4.184,515,3.849,516,4.184,517,3.104,518,3.104,519,3.104,520,4.374,521,3.104,522,3.104,523,3.849,524,2.415,525,3.104,526,3.104,527,2.995,528,3.104,529,3.104,530,3.104,531,3.104,532,3.104]],["title/index.html",[7,0.518,348,1.328,349,1.328]],["body/index.html",[1,0.921,3,0.305,5,0.305,8,0.368,9,0.53,10,0.53,11,1.691,12,0.833,13,0.073,14,0.654,15,0.037,16,0.032,17,0.05,18,1.687,20,1.315,21,0.789,26,1.35,27,1.61,29,0.53,30,1.068,33,1.325,34,0.53,35,1.767,36,2.226,37,0.789,39,0.789,41,1.227,43,0.442,49,0.641,52,0.53,53,1.227,54,0.789,55,1.325,56,1.068,57,1.325,58,0.789,59,0.789,60,0.641,61,0.789,62,0.641,63,2.218,65,0.53,66,0.641,67,0.641,73,0.368,76,0.368,77,0.368,79,1.687,80,1.943,82,0.884,83,0.305,85,0.789,89,0.53,91,2.192,92,0.789,94,1.373,96,0.789,111,0.884,116,0.368,128,1.119,129,2.189,130,1.373,132,0.305,134,0.368,135,0.737,140,0.53,143,0.641,144,0.641,145,0.641,146,0.641,147,0.789,148,0.789,152,0.641,173,1.373,178,1.171,187,0.789,196,0.641,200,1.922,201,1.691,202,0.654,205,0.442,243,1.227,244,1.023,245,0.442,246,1.105,247,1.068,248,1.068,254,0.641,264,1.315,268,1.068,274,2.367,275,1.315,279,0.789,312,0.789,318,1.691,320,1.315,324,1.315,329,1.78,333,2.192,352,0.789,357,2.629,359,0.789,360,0.641,364,2.846,367,0.789,371,0.53,375,0.789,392,2.367,396,0.789,397,3.45,431,1.373,440,0.789,445,2.958,448,1.691,449,0.789,457,0.789,461,1.315,464,1.973,485,0.789,486,0.789,487,0.789,492,1.315,501,0.789,502,0.789,504,0.789,524,0.789,527,0.789,533,3.941,534,2.173,535,2.173,536,1.014,537,1.014,538,2.535,539,1.973,540,0.789,541,1.014,542,1.69,543,1.014,544,1.014,545,1.69,546,3.226,547,1.69,548,1.69,549,1.014,550,1.014,551,1.014,552,1.014,553,1.69,554,1.014,555,1.69,556,1.69,557,1.69,558,1.69,559,1.014,560,1.014,561,1.014,562,1.014,563,1.014,564,1.014,565,1.014,566,1.014,567,1.69,568,2.173,569,1.014,570,2.173,571,1.69,572,1.69,573,1.973,574,1.69,575,1.69,576,1.69,577,1.373,578,1.014,579,0.789,580,1.014,581,1.014,582,1.014,583,1.691,584,1.014,585,1.014,586,1.69,587,3.379,588,1.014,589,3.379,590,1.014,591,1.69,592,1.315,593,1.014,594,1.69,595,1.014,596,1.69,597,1.69,598,1.69,599,1.014,600,1.014,601,1.69,602,1.014,603,1.691,604,1.014,605,1.014,606,2.535,607,1.014,608,2.173,609,2.173,610,1.014,611,1.014,612,1.014,613,1.014,614,1.014,615,1.014,616,1.014,617,2.173,618,1.014,619,1.014,620,1.014,621,1.014,622,1.014,623,2.535,624,1.014,625,1.014,626,1.014,627,1.014,628,1.014,629,1.014,630,1.014,631,1.014,632,1.69,633,1.014,634,1.69,635,1.014,636,1.014,637,1.014,638,1.014,639,1.014,640,1.014,641,1.014,642,1.014,643,1.69,644,2.173,645,1.69,646,0.789,647,1.69,648,1.014,649,1.69,650,1.014,651,1.014,652,1.014,653,1.014,654,1.014,655,1.014,656,1.014,657,1.014,658,2.173,659,2.173,660,1.014,661,1.014,662,1.014,663,1.014,664,1.014,665,1.69,666,1.014,667,1.014,668,1.014,669,1.014,670,1.014,671,1.014,672,1.014,673,1.014,674,1.014,675,1.69,676,2.173,677,1.014,678,2.173,679,1.014,680,1.014,681,1.014,682,1.014,683,1.014,684,1.014,685,1.014,686,1.014,687,1.014,688,1.014,689,1.014,690,1.014,691,1.014,692,1.014,693,1.014,694,1.69,695,1.014,696,2.173,697,1.69,698,1.014,699,1.014,700,1.014,701,1.014,702,1.014,703,2.173,704,2.173,705,1.014,706,1.014,707,1.014,708,1.014,709,1.014,710,1.014,711,1.014,712,1.014,713,1.014,714,1.014,715,1.014,716,1.014,717,1.014,718,1.014,719,2.173,720,1.014,721,1.014,722,1.69,723,1.69,724,1.014,725,3.226,726,2.173,727,1.014,728,1.014,729,1.014,730,1.014,731,1.69,732,0.789,733,1.014,734,1.014,735,1.014,736,1.69,737,1.014,738,1.014,739,1.014,740,1.69,741,1.014,742,1.014,743,1.014,744,1.014,745,2.173,746,1.014,747,1.69,748,1.014,749,1.014,750,1.014,751,1.014,752,1.014,753,1.014,754,1.014,755,1.014,756,1.69,757,1.69,758,1.014,759,1.014,760,1.014,761,2.816,762,2.816,763,1.69,764,1.014,765,1.014,766,1.69,767,1.014,768,1.014,769,1.014,770,1.014,771,1.014,772,1.014,773,0.789,774,1.014,775,1.014,776,1.014,777,1.014,778,1.014,779,1.014,780,0.789,781,2.535,782,2.535,783,1.014,784,1.014,785,1.014,786,1.014,787,2.173,788,1.69,789,1.69,790,1.014,791,1.014,792,1.014,793,2.535,794,2.173,795,1.69,796,1.69,797,1.014,798,1.69,799,1.69,800,1.014,801,1.014,802,2.535,803,1.014,804,1.69,805,1.69,806,1.014,807,1.014,808,1.014,809,1.014,810,1.014,811,1.014,812,1.014,813,1.014,814,1.014,815,1.014,816,1.014,817,1.014,818,1.014,819,1.014,820,1.014,821,1.315,822,1.315,823,1.014,824,1.014,825,1.014,826,1.014,827,0.789,828,0.789,829,1.014,830,1.014,831,1.315]],["title/license.html",[348,1.328,349,1.328,577,1.328]],["body/license.html",[13,0.057,15,0.046,16,0.057,17,0.046,111,1.62,256,1.62,435,2.41,539,2.991,540,3.253,573,2.41,577,1.958,579,2.41,603,2.41,646,2.991,732,2.41,773,2.41,780,2.41,821,2.41,822,2.41,827,3.253,828,2.41,831,2.991,832,3.844,833,3.097,834,3.097,835,3.097,836,3.097,837,3.097,838,3.097,839,3.844,840,4.732,841,3.097,842,3.097,843,3.097,844,3.097,845,3.844,846,3.097,847,3.097,848,3.097,849,3.097,850,3.097,851,3.097,852,3.097,853,3.097,854,3.097,855,3.844,856,3.097,857,3.097,858,3.097,859,3.097,860,3.097,861,3.844,862,3.097,863,3.097,864,3.097,865,3.097,866,3.097,867,3.097,868,3.097,869,3.097,870,3.097,871,3.097,872,3.097,873,3.097,874,3.097,875,3.097,876,3.097,877,3.097,878,3.097,879,3.097,880,3.097,881,3.097,882,3.097,883,3.097,884,3.097,885,3.097,886,3.097,887,3.097]],["title/modules.html",[245,1.452]],["body/modules.html",[13,0.064,15,0.056,16,0.064,17,0.056,244,1.373,245,1.647,360,2.389,431,2.389,888,3.78,889,3.78]],["title/overview.html",[890,2.592]],["body/overview.html",[0,2.091,13,0.07,15,0.049,16,0.059,17,0.049,18,1.73,19,2.052,121,1.417,199,2.091,205,1.441,206,2.052,243,1.744,244,1.755,246,1.201,247,2.091,248,2.091,249,2.091,250,2.574,251,2.574,252,2.574,253,2.574,254,2.529,255,2.574,256,1.73,314,2.091,583,2.574,592,3.48,890,2.574]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["02",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["02fb365",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":592,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":494,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.1.0",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["1.2.2",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":440,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["100",{"_index":198,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"changelog.html":{}}}],["11",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":687,"title":{},"body":{"index.html":{}}}],["13.404954",{"_index":679,"title":{},"body":{"index.html":{}}}],["15526c1",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["1f88ec6",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":583,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2018",{"_index":435,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":352,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["22b1bd5",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["3166",{"_index":708,"title":{},"body":{"index.html":{}}}],["40",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["4058ad9",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["4238e7d",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["446bc32",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":487,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["52.520008",{"_index":677,"title":{},"body":{"index.html":{}}}],["551743a",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["5584cae",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["5884951",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["59d34a7",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["5ad3513",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["5c6a295",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["60e44cd",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["66d1e24",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["69",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["69b6513",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["6ec7bb1",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["6f0e24c",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["6f91889",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["7.2.14",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["7.3.7",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["7519b8c",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["78f88ca",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["7a1804a",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["7c145d7",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["7ef4da6",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["80014cd",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["80f2005",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["859c103",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["8a41a4c",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["8ebe3fb",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["9281882",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["95046fd",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["98125e2",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["9cf1106",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":804,"title":{},"body":{"index.html":{}}}],["_address",{"_index":285,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["_mapsapiloader",{"_index":78,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["_ngzone",{"_index":71,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["a025c26",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["a4378f1",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["a5f08ac",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["ab59926",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["abeb505",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":773,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstractcontrol",{"_index":302,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["accessors",{"_index":290,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["action",{"_index":579,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_component",{"_index":209,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["add",{"_index":546,"title":{},"body":{"index.html":{}}}],["add/index.ts",{"_index":518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["added",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["adding",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":492,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addmoduletoimports",{"_index":510,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimports(options",{"_index":519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addpackagejsondependencies",{"_index":512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["address",{"_index":53,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"index.html":{}}}],["address(value",{"_index":313,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["addresslabeltext",{"_index":54,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["addresssearchcontrol",{"_index":42,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["addressvalidator",{"_index":44,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["adjust",{"_index":611,"title":{},"body":{"index.html":{}}}],["administrative_area1",{"_index":769,"title":{},"body":{"index.html":{}}}],["administrative_area2",{"_index":770,"title":{},"body":{"index.html":{}}}],["administrative_area3",{"_index":772,"title":{},"body":{"index.html":{}}}],["agm",{"_index":448,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agm/core",{"_index":135,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["agmcoremodule",{"_index":648,"title":{},"body":{"index.html":{}}}],["agmcoremodule.forroot",{"_index":650,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":752,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":709,"title":{},"body":{"index.html":{}}}],["alternative",{"_index":599,"title":{},"body":{"index.html":{}}}],["alternatively",{"_index":553,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":853,"title":{},"body":{"license.html":{}}}],["angular",{"_index":364,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/animations",{"_index":502,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/cdk",{"_index":504,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":238,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":132,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":134,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/material",{"_index":268,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/platform",{"_index":359,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["animations",{"_index":605,"title":{},"body":{"index.html":{}}}],["anthony",{"_index":821,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":274,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{}}}],["apikey",{"_index":651,"title":{},"body":{"index.html":{}}}],["app",{"_index":392,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app's",{"_index":803,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":649,"title":{},"body":{"index.html":{}}}],["appearance",{"_index":55,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["appearance.standard",{"_index":85,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["application",{"_index":634,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":653,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":556,"title":{},"body":{"index.html":{}}}],["arising",{"_index":885,"title":{},"body":{"license.html":{}}}],["array",{"_index":742,"title":{},"body":{"index.html":{}}}],["assets",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":841,"title":{},"body":{"license.html":{}}}],["auth",{"_index":806,"title":{},"body":{"index.html":{}}}],["authors",{"_index":876,"title":{},"body":{"license.html":{}}}],["auto",{"_index":658,"title":{},"body":{"index.html":{}}}],["autocomplate",{"_index":544,"title":{},"body":{"index.html":{}}}],["autocomplete",{"_index":36,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["autocomplete.addlistener('place_changed",{"_index":171,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.component",{"_index":266,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["autocomplete.component.html",{"_index":40,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.scss",{"_index":38,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts",{"_index":28,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{}}}],["autocomplete.component.ts:106",{"_index":105,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:137",{"_index":110,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:142",{"_index":112,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:25",{"_index":127,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:28",{"_index":84,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:31",{"_index":93,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:34",{"_index":97,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:37",{"_index":90,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:40",{"_index":86,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:43",{"_index":81,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:46",{"_index":88,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:49",{"_index":95,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:52",{"_index":98,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:55",{"_index":100,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:59",{"_index":99,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:62",{"_index":87,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:65",{"_index":103,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:68",{"_index":102,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:71",{"_index":104,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:73",{"_index":123,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:74",{"_index":122,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:76",{"_index":120,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:79",{"_index":74,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.component.ts:85",{"_index":108,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["autocomplete.directive",{"_index":272,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["autocomplete.directive.ts",{"_index":211,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:17",{"_index":216,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:20",{"_index":218,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:23",{"_index":219,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:26",{"_index":220,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:29",{"_index":222,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:32",{"_index":221,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:35",{"_index":217,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:38",{"_index":224,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:41",{"_index":223,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:44",{"_index":225,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:46",{"_index":232,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:47",{"_index":229,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:49",{"_index":228,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:52",{"_index":215,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:54",{"_index":234,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:55",{"_index":230,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:56",{"_index":231,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:60",{"_index":227,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:83",{"_index":226,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.getplace",{"_index":174,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["autocomplete.git",{"_index":792,"title":{},"body":{"index.html":{}}}],["autocomplete.module.ts",{"_index":258,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["autocomplete.module.ts:37",{"_index":261,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["autocomplete.umd.js",{"_index":626,"title":{},"body":{"index.html":{}}}],["autocomplete/bundles/google",{"_index":625,"title":{},"body":{"index.html":{}}}],["autocompleteoptions",{"_index":56,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["available",{"_index":721,"title":{},"body":{"index.html":{}}}],["babel",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["bash",{"_index":589,"title":{},"body":{"index.html":{}}}],["below",{"_index":748,"title":{},"body":{"index.html":{}}}],["beta.5",{"_index":501,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bf4af44",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":697,"title":{},"body":{"index.html":{}}}],["binding",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["bootstrap",{"_index":248,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{},"overview.html":{}}}],["bounds",{"_index":737,"title":{},"body":{"index.html":{}}}],["brand",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":889,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":360,"title":{},"body":{"changelog.html":{},"index.html":{},"modules.html":{}}}],["bug",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":802,"title":{},"body":{"index.html":{}}}],["built",{"_index":534,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":615,"title":{},"body":{"index.html":{}}}],["business",{"_index":763,"title":{},"body":{"index.html":{}}}],["c",{"_index":828,"title":{},"body":{"index.html":{},"license.html":{}}}],["c9feeff",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["calling",{"_index":717,"title":{},"body":{"index.html":{}}}],["calls",{"_index":724,"title":{},"body":{"index.html":{}}}],["catch((err",{"_index":191,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["cd",{"_index":798,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":396,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":778,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":350,"title":{"changelog.html":{}},"body":{}}],["character",{"_index":706,"title":{},"body":{"index.html":{}}}],["charge",{"_index":836,"title":{},"body":{"license.html":{}}}],["chat",{"_index":823,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":784,"title":{},"body":{"index.html":{}}}],["cities",{"_index":771,"title":{},"body":{"index.html":{}}}],["claim",{"_index":879,"title":{},"body":{"license.html":{}}}],["class",{"_index":147,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["clone",{"_index":787,"title":{},"body":{"index.html":{}}}],["cluster_matgooglemapsautocompletemodule",{"_index":251,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_matgooglemapsautocompletemodule_declarations",{"_index":252,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_matgooglemapsautocompletemodule_exports",{"_index":253,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["code",{"_index":644,"title":{},"body":{"index.html":{}}}],["codes",{"_index":712,"title":{},"body":{"index.html":{}}}],["collection",{"_index":745,"title":{},"body":{"index.html":{}}}],["combine",{"_index":662,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":263,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["compatible",{"_index":710,"title":{},"body":{"index.html":{}}}],["complete",{"_index":659,"title":{},"body":{"index.html":{}}}],["component",{"_index":18,"title":{"components/MatGoogleMapsAutocompleteComponent.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{},"overview.html":{}}}],["component/mat",{"_index":265,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["component_template",{"_index":204,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["componentrestrictions",{"_index":152,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["components",{"_index":20,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["conditions",{"_index":860,"title":{},"body":{"license.html":{}}}],["config",{"_index":616,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":612,"title":{},"body":{"index.html":{}}}],["connection",{"_index":886,"title":{},"body":{"license.html":{}}}],["consider",{"_index":602,"title":{},"body":{"index.html":{}}}],["console.log('onautocompleteselected",{"_index":187,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["console.log('onchange",{"_index":193,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["console.log('onlocationselected",{"_index":690,"title":{},"body":{"index.html":{}}}],["console.log(err",{"_index":192,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["const",{"_index":150,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["constructor(@inject(platform_id",{"_index":239,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["constructor(_mapsapiloader",{"_index":69,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["constructor(platformid",{"_index":214,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["constructor(private",{"_index":148,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["contact",{"_index":552,"title":{},"body":{"index.html":{}}}],["content",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":566,"title":{},"body":{"index.html":{}}}],["context",{"_index":531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contract",{"_index":882,"title":{},"body":{"license.html":{}}}],["control",{"_index":305,"title":{},"body":{"directives/MatValidateAddressDirective.html":{},"changelog.html":{}}}],["copies",{"_index":855,"title":{},"body":{"license.html":{}}}],["copy",{"_index":839,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":827,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":449,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["countries",{"_index":703,"title":{},"body":{"index.html":{}}}],["country",{"_index":57,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["currently",{"_index":701,"title":{},"body":{"index.html":{}}}],["customized",{"_index":661,"title":{},"body":{"index.html":{}}}],["d",{"_index":590,"title":{},"body":{"index.html":{}}}],["d180485",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["dadcddd",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":880,"title":{},"body":{"license.html":{}}}],["data",{"_index":775,"title":{},"body":{"index.html":{}}}],["dd10b9b",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":843,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":887,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":247,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{},"overview.html":{}}}],["decorators",{"_index":125,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["default",{"_index":82,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["defined",{"_index":73,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["demo",{"_index":357,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":246,"title":{"dependencies.html":{}},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":375,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deps",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":320,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["design",{"_index":535,"title":{},"body":{"index.html":{}}}],["dev",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["developers",{"_index":547,"title":{},"body":{"index.html":{}}}],["development",{"_index":575,"title":{},"body":{"index.html":{}}}],["devkit/schematics",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":180,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["different",{"_index":638,"title":{},"body":{"index.html":{}}}],["directions",{"_index":727,"title":{},"body":{"index.html":{}}}],["directive",{"_index":202,"title":{"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"index.html":{}}}],["directives",{"_index":205,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{},"overview.html":{}}}],["directives/address",{"_index":136,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["directives/mat",{"_index":271,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["directory",{"_index":796,"title":{},"body":{"index.html":{}}}],["distance",{"_index":728,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":851,"title":{},"body":{"license.html":{}}}],["docs",{"_index":345,"title":{},"body":{"injectables/MockNgZone.html":{},"changelog.html":{}}}],["documentation",{"_index":573,"title":{},"body":{"index.html":{},"license.html":{}}}],["dom",{"_index":23,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["downgraded",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["drop",{"_index":819,"title":{},"body":{"index.html":{}}}],["dual",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["ea16bb7",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["eca3761",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":760,"title":{},"body":{"index.html":{}}}],["element",{"_index":201,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["elementref",{"_index":124,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["elemref",{"_index":212,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["email",{"_index":820,"title":{},"body":{"index.html":{}}}],["emit",{"_index":182,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["enable",{"_index":542,"title":{},"body":{"index.html":{}}}],["encapsulation",{"_index":669,"title":{},"body":{"index.html":{}}}],["end",{"_index":642,"title":{},"body":{"index.html":{}}}],["enter",{"_index":92,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["enum",{"_index":142,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["enumerations",{"_index":507,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["errors",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["establishment",{"_index":757,"title":{},"body":{"index.html":{}}}],["even",{"_index":739,"title":{},"body":{"index.html":{}}}],["event",{"_index":111,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{},"license.html":{}}}],["eventemitter",{"_index":101,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["eventemitter(false",{"_index":344,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["eventemitter.subscribe((address",{"_index":309,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["everything",{"_index":597,"title":{},"body":{"index.html":{}}}],["exact",{"_index":635,"title":{},"body":{"index.html":{}}}],["example",{"_index":332,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["exception",{"_index":753,"title":{},"body":{"index.html":{}}}],["exists",{"_index":777,"title":{},"body":{"index.html":{}}}],["explanatory",{"_index":782,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":744,"title":{},"body":{"index.html":{}}}],["export",{"_index":14,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["exportas",{"_index":32,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["exports",{"_index":250,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["express",{"_index":867,"title":{},"body":{"license.html":{}}}],["expression",{"_index":162,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["extends",{"_index":331,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["extensions",{"_index":560,"title":{},"body":{"index.html":{}}}],["extensions.github.io/google",{"_index":581,"title":{},"body":{"index.html":{}}}],["extensions/combination",{"_index":817,"title":{},"body":{"index.html":{}}}],["extensions/contacts",{"_index":816,"title":{},"body":{"index.html":{}}}],["extensions/faq",{"_index":815,"title":{},"body":{"index.html":{}}}],["extensions/google",{"_index":533,"title":{},"body":{"index.html":{}}}],["extensions/link",{"_index":811,"title":{},"body":{"index.html":{}}}],["extensions/pages",{"_index":810,"title":{},"body":{"index.html":{}}}],["extensions/password",{"_index":813,"title":{},"body":{"index.html":{}}}],["external",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["f2b7b63",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["f428a82",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["failed",{"_index":183,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["false",{"_index":307,"title":{},"body":{"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["feature",{"_index":545,"title":{},"body":{"index.html":{}}}],["features",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":486,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["files",{"_index":842,"title":{},"body":{"license.html":{}}}],["fill",{"_index":144,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filter",{"_index":702,"title":{},"body":{"index.html":{}}}],["firebaseui",{"_index":807,"title":{},"body":{"index.html":{}}}],["firebaseui/ng",{"_index":809,"title":{},"body":{"index.html":{}}}],["fired",{"_index":779,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":872,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["flush",{"_index":325,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["fn",{"_index":340,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["follow",{"_index":785,"title":{},"body":{"index.html":{}}}],["following",{"_index":603,"title":{},"body":{"index.html":{},"license.html":{}}}],["form",{"_index":461,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["formcontrol",{"_index":113,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["formcontrol({value",{"_index":115,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["forms",{"_index":607,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":269,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["forroot",{"_index":260,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["forwardref",{"_index":282,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["free",{"_index":835,"title":{},"body":{"license.html":{}}}],["full",{"_index":196,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["function",{"_index":338,"title":{},"body":{"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{}}}],["function(options",{"_index":532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functions",{"_index":509,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":858,"title":{},"body":{"license.html":{}}}],["general",{"_index":750,"title":{},"body":{"index.html":{}}}],["generator",{"_index":818,"title":{},"body":{"index.html":{}}}],["geocode",{"_index":756,"title":{},"body":{"index.html":{}}}],["geocoding",{"_index":726,"title":{},"body":{"index.html":{}}}],["geolocation",{"_index":682,"title":{},"body":{"index.html":{}}}],["getaddress",{"_index":298,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["getpackageversionfrompackagejson",{"_index":513,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpackageversionfrompackagejson(tree",{"_index":521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getplace",{"_index":718,"title":{},"body":{"index.html":{}}}],["gets",{"_index":522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":348,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":790,"title":{},"body":{"index.html":{}}}],["gitter",{"_index":824,"title":{},"body":{"index.html":{}}}],["given",{"_index":527,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["google",{"_index":26,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["google.maps.places.autocomplete(this.elemref.nativeelement",{"_index":242,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["google.maps.places.autocomplete(this.searchelementref.nativeelement",{"_index":170,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["google.maps.places.autocompleteoptions",{"_index":141,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["google.maps.places.placeresult",{"_index":140,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["goolgle",{"_index":543,"title":{},"body":{"index.html":{}}}],["gracefully",{"_index":530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["granted",{"_index":834,"title":{},"body":{"license.html":{}}}],["groups",{"_index":700,"title":{},"body":{"index.html":{}}}],["gulp",{"_index":794,"title":{},"body":{"index.html":{}}}],["heart",{"_index":548,"title":{},"body":{"index.html":{}}}],["help",{"_index":825,"title":{},"body":{"index.html":{}}}],["here",{"_index":558,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":833,"title":{},"body":{"license.html":{}}}],["hesitate",{"_index":551,"title":{},"body":{"index.html":{}}}],["higher",{"_index":584,"title":{},"body":{"index.html":{}}}],["holders",{"_index":877,"title":{},"body":{"license.html":{}}}],["home",{"_index":666,"title":{},"body":{"index.html":{}}}],["home.component.html",{"_index":667,"title":{},"body":{"index.html":{}}}],["home.component.scss",{"_index":668,"title":{},"body":{"index.html":{}}}],["homecomponent",{"_index":671,"title":{},"body":{"index.html":{}}}],["hosted",{"_index":800,"title":{},"body":{"index.html":{}}}],["html",{"_index":200,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"changelog.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":801,"title":{},"body":{"index.html":{}}}],["https://angular",{"_index":580,"title":{},"body":{"index.html":{}}}],["https://github.com/angular",{"_index":791,"title":{},"body":{"index.html":{}}}],["https://github.com/angular/angular/blob/master/packages/core/testing/src/ng_zone_mock.ts",{"_index":330,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["https://github.com/angular/angular/blob/master/packages/forms/src/directives/validators.ts",{"_index":304,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["id",{"_index":722,"title":{},"body":{"index.html":{}}}],["ids",{"_index":716,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":323,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["implements",{"_index":29,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["implied",{"_index":868,"title":{},"body":{"license.html":{}}}],["import",{"_index":128,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"index.html":{}}}],["imported",{"_index":633,"title":{},"body":{"index.html":{}}}],["imports",{"_index":275,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{}}}],["include",{"_index":569,"title":{},"body":{"index.html":{}}}],["included",{"_index":780,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":845,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["initgooglemapsautocomplete",{"_index":48,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["initialize",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":235,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["inject(platform_id",{"_index":233,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["injectable",{"_index":314,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{},"overview.html":{}}}],["injectables",{"_index":316,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["input",{"_index":129,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["inputs",{"_index":52,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["install",{"_index":587,"title":{},"body":{"index.html":{}}}],["installation",{"_index":571,"title":{},"body":{"index.html":{}}}],["installed",{"_index":628,"title":{},"body":{"index.html":{}}}],["installpackagejsondependencies",{"_index":514,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instance",{"_index":663,"title":{},"body":{"index.html":{}}}],["instruct",{"_index":713,"title":{},"body":{"index.html":{}}}],["instructs",{"_index":761,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Location.html":{}},"body":{"interfaces/Location.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Location.html":{}}}],["interfaces/location.interface",{"_index":139,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["invalid",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["invaliderrortext",{"_index":58,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["iso",{"_index":707,"title":{},"body":{"index.html":{}}}],["isplatformbrowser",{"_index":237,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":240,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["issue",{"_index":557,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":695,"title":{},"body":{"index.html":{}}}],["jest",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":623,"title":{},"body":{"index.html":{}}}],["kind",{"_index":866,"title":{},"body":{"license.html":{}}}],["latitude",{"_index":9,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["learn",{"_index":595,"title":{},"body":{"index.html":{}}}],["legacy",{"_index":146,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["legend",{"_index":199,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["level",{"_index":641,"title":{},"body":{"index.html":{}}}],["liability",{"_index":881,"title":{},"body":{"license.html":{}}}],["liable",{"_index":878,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":576,"title":{},"body":{"index.html":{}}}],["library",{"_index":464,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":577,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":829,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":846,"title":{},"body":{"license.html":{}}}],["limited",{"_index":869,"title":{},"body":{"license.html":{}}}],["line:no",{"_index":160,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["link",{"_index":793,"title":{},"body":{"index.html":{}}}],["linkifyjs",{"_index":808,"title":{},"body":{"index.html":{}}}],["lint",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":632,"title":{},"body":{"index.html":{}}}],["listed",{"_index":746,"title":{},"body":{"index.html":{}}}],["load",{"_index":169,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["loader",{"_index":621,"title":{},"body":{"index.html":{}}}],["loadpackageversiongracefully",{"_index":515,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadpackageversiongracefully(context",{"_index":528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loads",{"_index":529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["locality",{"_index":766,"title":{},"body":{"index.html":{}}}],["locally",{"_index":574,"title":{},"body":{"index.html":{}}}],["location",{"_index":1,"title":{"interfaces/Location.html":{}},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{}}}],["location.latitude",{"_index":691,"title":{},"body":{"index.html":{}}}],["location.longitude",{"_index":692,"title":{},"body":{"index.html":{}}}],["longitude",{"_index":10,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["look",{"_index":622,"title":{},"body":{"index.html":{}}}],["looking",{"_index":525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loudspeaker",{"_index":564,"title":{},"body":{"index.html":{}}}],["made",{"_index":720,"title":{},"body":{"index.html":{}}}],["main",{"_index":629,"title":{},"body":{"index.html":{}}}],["map",{"_index":617,"title":{},"body":{"index.html":{}}}],["maps",{"_index":27,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mapsapiloader",{"_index":70,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["mat",{"_index":35,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"index.html":{}}}],["match",{"_index":740,"title":{},"body":{"index.html":{}}}],["matching",{"_index":16,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":397,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["material2's",{"_index":541,"title":{},"body":{"index.html":{}}}],["matgooglemapsautocomplete",{"_index":33,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["matgooglemapsautocomplete]'},{'name",{"_index":207,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["matgooglemapsautocompletecomponent",{"_index":19,"title":{"components/MatGoogleMapsAutocompleteComponent.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"overview.html":{}}}],["matgooglemapsautocompletedirective",{"_index":206,"title":{"directives/MatGoogleMapsAutocompleteDirective.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["matgooglemapsautocompletemodule",{"_index":244,"title":{"modules/MatGoogleMapsAutocompleteModule.html":{}},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matgooglemapsautocompletemodule.forroot",{"_index":647,"title":{},"body":{"index.html":{}}}],["matinputmodule",{"_index":267,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["matrix",{"_index":729,"title":{},"body":{"index.html":{}}}],["matvalidateaddress",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["matvalidateaddressdirective",{"_index":121,"title":{"directives/MatValidateAddressDirective.html":{}},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"overview.html":{}}}],["mechanism",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":871,"title":{},"body":{"license.html":{}}}],["merge",{"_index":849,"title":{},"body":{"license.html":{}}}],["merged",{"_index":776,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":31,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{}}}],["method",{"_index":636,"title":{},"body":{"index.html":{}}}],["methods",{"_index":47,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["minor",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":506,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":831,"title":{},"body":{"index.html":{},"license.html":{}}}],["mix",{"_index":755,"title":{},"body":{"index.html":{}}}],["mock",{"_index":321,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockngzone",{"_index":315,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["modify",{"_index":848,"title":{},"body":{"license.html":{}}}],["module",{"_index":243,"title":{"modules/MatGoogleMapsAutocompleteModule.html":{}},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["module's",{"_index":273,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["modules",{"_index":245,"title":{"modules.html":{}},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":262,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["more",{"_index":596,"title":{},"body":{"index.html":{}}}],["multi",{"_index":283,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["multiple",{"_index":711,"title":{},"body":{"index.html":{}}}],["nahas",{"_index":822,"title":{},"body":{"index.html":{},"license.html":{}}}],["name",{"_index":76,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":795,"title":{},"body":{"index.html":{}}}],["navigator",{"_index":683,"title":{},"body":{"index.html":{}}}],["navigator.geolocation.getcurrentposition((position",{"_index":684,"title":{},"body":{"index.html":{}}}],["need",{"_index":586,"title":{},"body":{"index.html":{}}}],["needs",{"_index":618,"title":{},"body":{"index.html":{}}}],["new",{"_index":114,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{}}}],["next",{"_index":159,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["ng",{"_index":318,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["ng_validators",{"_index":280,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["ngmodule",{"_index":264,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{}}}],["ngoninit",{"_index":49,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["ngx",{"_index":805,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":72,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"injectables/MockNgZone.html":{}}}],["node_module",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["node_modules/@angular",{"_index":624,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":875,"title":{},"body":{"license.html":{}}}],["note",{"_index":758,"title":{},"body":{"index.html":{}}}],["note:if",{"_index":610,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":749,"title":{},"body":{"index.html":{}}}],["notice",{"_index":646,"title":{},"body":{"index.html":{},"license.html":{}}}],["now",{"_index":538,"title":{},"body":{"index.html":{}}}],["npm",{"_index":445,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":116,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["number",{"_index":11,"title":{},"body":{"interfaces/Location.html":{},"index.html":{}}}],["object",{"_index":719,"title":{},"body":{"index.html":{}}}],["object.assign(this.autocompleteoptions",{"_index":166,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["obtaining",{"_index":838,"title":{},"body":{"license.html":{}}}],["official",{"_index":694,"title":{},"body":{"index.html":{}}}],["onaddressselected",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["onautocompleteselected",{"_index":65,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["onautocompleteselected(result",{"_index":688,"title":{},"body":{"index.html":{}}}],["once",{"_index":627,"title":{},"body":{"index.html":{}}}],["onchange",{"_index":66,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["one",{"_index":774,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":30,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["onlocationselected",{"_index":67,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["onlocationselected(location",{"_index":689,"title":{},"body":{"index.html":{}}}],["onnewplaceresult",{"_index":45,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["onquery",{"_index":50,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["onquery(event",{"_index":109,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["onstable",{"_index":326,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["open",{"_index":555,"title":{},"body":{"index.html":{}}}],["option",{"_index":696,"title":{},"body":{"index.html":{}}}],["optional",{"_index":77,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":151,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"miscellaneous/functions.html":{}}}],["options.push({componentrestrictions",{"_index":163,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["options.push({types",{"_index":164,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["othercomponent",{"_index":655,"title":{},"body":{"index.html":{}}}],["othermodule",{"_index":656,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":884,"title":{},"body":{"license.html":{}}}],["out",{"_index":256,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"injectables/MockNgZone.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":145,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":130,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["outputs",{"_index":64,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["outside",{"_index":738,"title":{},"body":{"index.html":{}}}],["overview",{"_index":890,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":371,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["package.json",{"_index":526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages",{"_index":604,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":75,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":631,"title":{},"body":{"index.html":{}}}],["particular",{"_index":873,"title":{},"body":{"license.html":{}}}],["passed",{"_index":704,"title":{},"body":{"index.html":{}}}],["path",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":567,"title":{},"body":{"index.html":{}}}],["permission",{"_index":832,"title":{},"body":{"license.html":{}}}],["permit",{"_index":856,"title":{},"body":{"license.html":{}}}],["person",{"_index":837,"title":{},"body":{"license.html":{}}}],["persons",{"_index":857,"title":{},"body":{"license.html":{}}}],["place",{"_index":173,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["place.formatted_address",{"_index":185,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["place.geometry",{"_index":176,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["place.geometry.location.lat",{"_index":189,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["place.geometry.location.lng",{"_index":190,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["place.place_id",{"_index":175,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["placeholder",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["placeholdertext",{"_index":59,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["placeidonly",{"_index":60,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["placeresult",{"_index":79,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["places",{"_index":725,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":236,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["platformid",{"_index":213,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["please",{"_index":91,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["point",{"_index":613,"title":{},"body":{"index.html":{}}}],["portions",{"_index":863,"title":{},"body":{"license.html":{}}}],["position.coords.latitude",{"_index":685,"title":{},"body":{"index.html":{}}}],["position.coords.longitude",{"_index":686,"title":{},"body":{"index.html":{}}}],["postal_code",{"_index":768,"title":{},"body":{"index.html":{}}}],["postcss",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["pr",{"_index":554,"title":{},"body":{"index.html":{}}}],["precise",{"_index":764,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":812,"title":{},"body":{"index.html":{}}}],["private",{"_index":43,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["project",{"_index":559,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["provide",{"_index":279,"title":{},"body":{"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["provided",{"_index":864,"title":{},"body":{"license.html":{}}}],["providers",{"_index":249,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"overview.html":{}}}],["public",{"_index":41,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["publish",{"_index":850,"title":{},"body":{"license.html":{}}}],["punch",{"_index":826,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":874,"title":{},"body":{"license.html":{}}}],["question",{"_index":549,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":270,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["recommended",{"_index":593,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["region",{"_index":736,"title":{},"body":{"index.html":{}}}],["regions",{"_index":765,"title":{},"body":{"index.html":{}}}],["remaining",{"_index":630,"title":{},"body":{"index.html":{}}}],["removed",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":788,"title":{},"body":{"index.html":{}}}],["required",{"_index":96,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["requirederrortext",{"_index":61,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["requirements",{"_index":568,"title":{},"body":{"index.html":{}}}],["requires",{"_index":582,"title":{},"body":{"index.html":{}}}],["reset",{"_index":255,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"overview.html":{}}}],["resetaddress",{"_index":51,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["restrict",{"_index":698,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":844,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":17,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["retrieve",{"_index":715,"title":{},"body":{"index.html":{}}}],["return",{"_index":178,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["returned",{"_index":723,"title":{},"body":{"index.html":{}}}],["returns",{"_index":106,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":847,"title":{},"body":{"license.html":{}}}],["rollup",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":639,"title":{},"body":{"index.html":{}}}],["rule",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":333,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["run(fn",{"_index":337,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["running",{"_index":789,"title":{},"body":{"index.html":{}}}],["runoutsideangular",{"_index":334,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":341,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["safely",{"_index":754,"title":{},"body":{"index.html":{}}}],["same",{"_index":759,"title":{},"body":{"index.html":{}}}],["save",{"_index":600,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":367,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["script",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["searchelementref",{"_index":46,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["select",{"_index":181,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["selectedaddress",{"_index":672,"title":{},"body":{"index.html":{}}}],["selector",{"_index":34,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["self",{"_index":781,"title":{},"body":{"index.html":{}}}],["sell",{"_index":854,"title":{},"body":{"license.html":{}}}],["serve",{"_index":797,"title":{},"body":{"index.html":{}}}],["service",{"_index":762,"title":{},"body":{"index.html":{}}}],["services",{"_index":730,"title":{},"body":{"index.html":{}}}],["set",{"_index":312,"title":{},"body":{"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["setaddress(value",{"_index":300,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["setcurrentposition",{"_index":681,"title":{},"body":{"index.html":{}}}],["setting",{"_index":783,"title":{},"body":{"index.html":{}}}],["setup",{"_index":594,"title":{},"body":{"index.html":{}}}],["shall",{"_index":861,"title":{},"body":{"license.html":{}}}],["sharing",{"_index":563,"title":{},"body":{"index.html":{}}}],["shell",{"_index":598,"title":{},"body":{"index.html":{}}}],["show",{"_index":179,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["similar",{"_index":645,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["simply",{"_index":654,"title":{},"body":{"index.html":{}}}],["simulatezoneexit",{"_index":335,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":751,"title":{},"body":{"index.html":{}}}],["slightly",{"_index":637,"title":{},"body":{"index.html":{}}}],["software",{"_index":840,"title":{},"body":{"license.html":{}}}],["solved",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["specific",{"_index":699,"title":{},"body":{"index.html":{}}}],["specified",{"_index":524,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["specifies",{"_index":743,"title":{},"body":{"index.html":{}}}],["specifying",{"_index":731,"title":{},"body":{"index.html":{}}}],["src/.../index.ts",{"_index":511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mat",{"_index":508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/module/component/mat",{"_index":25,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/module/directives/address",{"_index":276,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["src/module/directives/mat",{"_index":210,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["src/module/interfaces/location.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Location.html":{}}}],["src/module/mat",{"_index":257,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["src/module/testing/mock",{"_index":317,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["src/schematics/src/ng",{"_index":517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ssr",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":585,"title":{},"body":{"index.html":{}}}],["standard",{"_index":143,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["star",{"_index":562,"title":{},"body":{"index.html":{}}}],["starring",{"_index":561,"title":{},"body":{"index.html":{}}}],["start",{"_index":799,"title":{},"body":{"index.html":{}}}],["started",{"_index":349,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":259,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["stating",{"_index":536,"title":{},"body":{"index.html":{}}}],["strength",{"_index":814,"title":{},"body":{"index.html":{}}}],["strictbounds",{"_index":62,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["strictly",{"_index":734,"title":{},"body":{"index.html":{}}}],["string",{"_index":80,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["style",{"_index":485,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styles",{"_index":22,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["styleurls",{"_index":37,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["subject",{"_index":859,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":852,"title":{},"body":{"license.html":{}}}],["sublocality",{"_index":767,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":287,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["subscribe(eventemitter",{"_index":292,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["subscription",{"_index":286,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["subscriptions",{"_index":327,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["substantial",{"_index":862,"title":{},"body":{"license.html":{}}}],["suggestion",{"_index":550,"title":{},"body":{"index.html":{}}}],["super({enablelongstacktrace",{"_index":346,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["support",{"_index":431,"title":{},"body":{"changelog.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":747,"title":{},"body":{"index.html":{}}}],["svg",{"_index":888,"title":{},"body":{"modules.html":{}}}],["synchronous",{"_index":322,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["system",{"_index":620,"title":{},"body":{"index.html":{}}}],["systemjs",{"_index":609,"title":{},"body":{"index.html":{}}}],["table",{"_index":565,"title":{},"body":{"index.html":{}}}],["target",{"_index":657,"title":{},"body":{"index.html":{}}}],["tell",{"_index":619,"title":{},"body":{"index.html":{}}}],["template",{"_index":21,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["templateurl",{"_index":39,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"index.html":{}}}],["tests",{"_index":328,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["theme",{"_index":570,"title":{},"body":{"index.html":{}}}],["this._address",{"_index":311,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["this._mapsapiloader",{"_index":168,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["this._ngzone.run",{"_index":172,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.address",{"_index":184,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{}}}],["this.addresssearchcontrol.updatevalueandvalidity",{"_index":195,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["this.addressvalidator.subscribe(this.onnewplaceresult",{"_index":149,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.addressvalidator.validate",{"_index":119,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.autocompleteoptions",{"_index":165,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.country",{"_index":153,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.initgooglemapsautocomplete",{"_index":167,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.latitude",{"_index":676,"title":{},"body":{"index.html":{}}}],["this.longitude",{"_index":678,"title":{},"body":{"index.html":{}}}],["this.mapsapiloader",{"_index":241,"title":{},"body":{"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.onautocompleteselected.emit(place",{"_index":186,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.onchange.emit(this.address",{"_index":194,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["this.onlocationselected.emit",{"_index":188,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.onstable.emit(null",{"_index":347,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.placeidonly",{"_index":154,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.setcurrentposition",{"_index":680,"title":{},"body":{"index.html":{}}}],["this.strictbounds",{"_index":155,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.subscription",{"_index":308,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["this.subscription.unsubscribe",{"_index":310,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["this.titleservice.settitle('home",{"_index":674,"title":{},"body":{"index.html":{}}}],["this.type",{"_index":157,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.types",{"_index":156,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["this.zoom",{"_index":675,"title":{},"body":{"index.html":{}}}],["those",{"_index":733,"title":{},"body":{"index.html":{}}}],["title",{"_index":665,"title":{},"body":{"index.html":{}}}],["titleservice",{"_index":673,"title":{},"body":{"index.html":{}}}],["token",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":640,"title":{},"body":{"index.html":{}}}],["tort",{"_index":883,"title":{},"body":{"license.html":{}}}],["transpile",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":24,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":284,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["tslint:disable",{"_index":158,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["tutorial",{"_index":786,"title":{},"body":{"index.html":{}}}],["two",{"_index":705,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/Location.html":{},"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["types",{"_index":63,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"index.html":{}}}],["types/googlemaps",{"_index":591,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":457,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typo",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":601,"title":{},"body":{"index.html":{}}}],["umd",{"_index":614,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":177,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["under",{"_index":830,"title":{},"body":{"index.html":{}}}],["unexpected",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["unnamed",{"_index":516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unsubscribe",{"_index":288,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["unused",{"_index":161,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["up",{"_index":643,"title":{},"body":{"index.html":{}}}],["updated",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":572,"title":{},"body":{"index.html":{}}}],["use",{"_index":539,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":324,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["useexisting",{"_index":281,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["user",{"_index":741,"title":{},"body":{"index.html":{}}}],["using",{"_index":608,"title":{},"body":{"index.html":{}}}],["v1",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":588,"title":{},"body":{"index.html":{}}}],["v1.3.0",{"_index":537,"title":{},"body":{"index.html":{}}}],["v2.9.2",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["v7",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["v7.0.13",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["v7.2.1",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["v7.2.12",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["v7.3.1",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["v7.3.4",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["v7.x",{"_index":606,"title":{},"body":{"index.html":{}}}],["valid",{"_index":89,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"index.html":{}}}],["validate",{"_index":289,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validate][formcontrolname],[matvalidateaddress][formcontrol],[matvalidateaddress][ngmodel",{"_index":208,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatValidateAddressDirective.html":{}}}],["validateaddress",{"_index":306,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validationerrors",{"_index":303,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator",{"_index":278,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator's",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["validator.directive",{"_index":138,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{}}}],["validator.directive.ts",{"_index":277,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:15",{"_index":297,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:17",{"_index":291,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:23",{"_index":295,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:33",{"_index":293,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:39",{"_index":294,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:43",{"_index":299,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator.directive.ts:47",{"_index":301,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validator/mat",{"_index":137,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"modules/MatGoogleMapsAutocompleteModule.html":{},"directives/MatValidateAddressDirective.html":{}}}],["validatorfn",{"_index":296,"title":{},"body":{"directives/MatValidateAddressDirective.html":{}}}],["validators",{"_index":133,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["validators.compose",{"_index":117,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["validators.required",{"_index":118,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{}}}],["value",{"_index":83,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["var",{"_index":203,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["version",{"_index":523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["via",{"_index":329,"title":{},"body":{"injectables/MockNgZone.html":{},"changelog.html":{},"index.html":{}}}],["view",{"_index":578,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":131,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["viewchild('search",{"_index":126,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["viewencapsulation",{"_index":664,"title":{},"body":{"index.html":{}}}],["viewencapsulation.none",{"_index":670,"title":{},"body":{"index.html":{}}}],["visit",{"_index":693,"title":{},"body":{"index.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{},"directives/MatGoogleMapsAutocompleteDirective.html":{},"directives/MatValidateAddressDirective.html":{},"injectables/MockNgZone.html":{}}}],["warranties",{"_index":870,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":865,"title":{},"body":{"license.html":{}}}],["well",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":732,"title":{},"body":{"index.html":{},"license.html":{}}}],["widget",{"_index":714,"title":{},"body":{"index.html":{}}}],["width",{"_index":197,"title":{},"body":{"components/MatGoogleMapsAutocompleteComponent.html":{}}}],["within",{"_index":735,"title":{},"body":{"index.html":{}}}],["without",{"_index":540,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrapper",{"_index":660,"title":{},"body":{"index.html":{}}}],["your_key",{"_index":652,"title":{},"body":{"index.html":{}}}],["zone.ts",{"_index":319,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zone.ts:21",{"_index":336,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zone.ts:27",{"_index":339,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zone.ts:31",{"_index":342,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zone.ts:35",{"_index":343,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["zoom",{"_index":254,"title":{},"body":{"modules/MatGoogleMapsAutocompleteModule.html":{},"index.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/interfaces/location.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  latitude: number,\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatGoogleMapsAutocompleteComponent.html":{"url":"components/MatGoogleMapsAutocompleteComponent.html","title":"component - MatGoogleMapsAutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatGoogleMapsAutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/module/component/mat-google-maps-autocomplete.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n            \n                exportAs\n                matGoogleMapsAutocomplete\n            \n\n\n\n\n\n\n\n            \n                selector\n                mat-google-maps-autocomplete\n            \n\n            \n                styleUrls\n                ./mat-google-maps-autocomplete.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mat-google-maps-autocomplete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressSearchControl\n                            \n                            \n                                    Private\n                                addressValidator\n                            \n                            \n                                    Private\n                                onNewPlaceResult\n                            \n                            \n                                    Public\n                                searchElementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initGoogleMapsAutocomplete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onQuery\n                            \n                            \n                                    Private\n                                resetAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                addressLabelText\n                            \n                            \n                                appearance\n                            \n                            \n                                autoCompleteOptions\n                            \n                            \n                                country\n                            \n                            \n                                invalidErrorText\n                            \n                            \n                                placeholderText\n                            \n                            \n                                placeIdOnly\n                            \n                            \n                                requiredErrorText\n                            \n                            \n                                strictBounds\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onAutocompleteSelected\n                            \n                            \n                                onChange\n                            \n                            \n                                onLocationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mapsAPILoader: MapsAPILoader, _ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/module/component/mat-google-maps-autocomplete.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :     PlaceResult | string\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addressLabelText\n                    \n                \n                \n                    \n                        Default value : 'Address'\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        appearance\n                    \n                \n                \n                    \n                        Type :         string | Appearance\n\n                    \n                \n                \n                    \n                        Default value : Appearance.STANDARD\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoCompleteOptions\n                    \n                \n                \n                    \n                        Type :     AutocompleteOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invalidErrorText\n                    \n                \n                \n                    \n                        Default value : 'The address is not valid'\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Default value : 'Please enter the address'\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeIdOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredErrorText\n                    \n                \n                \n                    \n                        Default value : 'The address is required'\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strictBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        types\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:55\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onAutocompleteSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLocationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:71\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initGoogleMapsAutocomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initGoogleMapsAutocomplete()\n                \n            \n\n\n            \n                \n                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onQuery(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressSearchControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl({value: null}, Validators.compose([\n    Validators.required,\n    this.addressValidator.validate()])\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addressValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatValidateAddressDirective\n\n                        \n                    \n                    \n                        \n                            Default value : new MatValidateAddressDirective()\n                        \n                    \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onNewPlaceResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchElementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('search')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/component/mat-google-maps-autocomplete.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, EventEmitter, Input, NgZone, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MapsAPILoader} from '@agm/core';\nimport {MatValidateAddressDirective} from '../directives/address-validator/mat-address-validator.directive';\nimport {Location} from '../interfaces/location.interface';\nimport PlaceResult = google.maps.places.PlaceResult;\nimport AutocompleteOptions = google.maps.places.AutocompleteOptions;\n\nexport enum Appearance {\n  STANDARD = 'standard',\n  FILL = 'fill',\n  OUTLINE = 'outline',\n  LEGACY = 'legacy',\n}\n\n@Component({\n  selector: 'mat-google-maps-autocomplete',\n  exportAs: 'matGoogleMapsAutocomplete',\n  templateUrl: './mat-google-maps-autocomplete.component.html',\n  styleUrls: ['./mat-google-maps-autocomplete.component.scss']\n})\nexport class MatGoogleMapsAutocompleteComponent implements OnInit {\n\n  @ViewChild('search')\n  public searchElementRef: ElementRef;\n\n  @Input()\n  addressLabelText = 'Address';\n\n  @Input()\n  placeholderText = 'Please enter the address';\n\n  @Input()\n  requiredErrorText = 'The address is required';\n\n  @Input()\n  invalidErrorText = 'The address is not valid';\n\n  @Input()\n  appearance: string | Appearance = Appearance.STANDARD;\n\n  @Input()\n  address: PlaceResult | string;\n\n  @Input()\n  country: string | string[];\n\n  @Input()\n  placeIdOnly?: boolean;\n\n  @Input()\n  strictBounds?: boolean;\n\n  @Input()\n  types?: string[];\n  // types: string[] = ['address'];\n\n  @Input()\n  type?: string;\n\n  @Input()\n  autoCompleteOptions: AutocompleteOptions = {};\n\n  @Output()\n  onChange: EventEmitter = new EventEmitter();\n\n  @Output()\n  onAutocompleteSelected: EventEmitter = new EventEmitter();\n\n  @Output()\n  onLocationSelected: EventEmitter = new EventEmitter();\n\n  private onNewPlaceResult: EventEmitter = new EventEmitter();\n  private addressValidator: MatValidateAddressDirective = new MatValidateAddressDirective();\n\n  public addressSearchControl: FormControl = new FormControl({value: null}, Validators.compose([\n    Validators.required,\n    this.addressValidator.validate()])\n  );\n\n  constructor(private _mapsAPILoader: MapsAPILoader,\n              private _ngZone: NgZone) {\n  }\n\n  ngOnInit(): void {\n    this.addressValidator.subscribe(this.onNewPlaceResult);\n\n    const options: any = {\n      // types: ['address'],\n      // componentRestrictions: {country: this.country},\n      placeIdOnly: this.placeIdOnly,\n      strictBounds: this.strictBounds,\n      // types: this.types,\n      type: this.type\n    };\n\n    // tslint:disable-next-line:no-unused-expression\n    this.country ? options.push({componentRestrictions: {country: this.country}}) : null;\n    // tslint:disable-next-line:no-unused-expression\n    this.country ? options.push({types: this.types}) : null;\n\n    this.autoCompleteOptions = Object.assign(this.autoCompleteOptions, options);\n    this.initGoogleMapsAutocomplete();\n  }\n\n  public initGoogleMapsAutocomplete() {\n    this._mapsAPILoader\n      .load()\n      .then(() => {\n        const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, this.autoCompleteOptions);\n        autocomplete.addListener('place_changed', () => {\n          this._ngZone.run(() => {\n            // get the place result\n            const place: PlaceResult = autocomplete.getPlace();\n\n            if (!place.place_id || place.geometry === undefined || place.geometry === null) {\n              // place result is not valid\n              return;\n            } else {\n              // show dialog to select a address from the input\n              // emit failed event\n            }\n            this.address = place.formatted_address;\n            this.onAutocompleteSelected.emit(place);\n            // console.log('onAutocompleteSelected -> ', place);\n            this.onLocationSelected.emit(\n              {\n                latitude: place.geometry.location.lat(),\n                longitude: place.geometry.location.lng()\n              })\n          });\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  public onQuery(event: any) {\n    // console.log('onChange()', event);\n    this.onChange.emit(this.address);\n  }\n\n  private resetAddress() {\n    this.address = null;\n    this.addressSearchControl.updateValueAndValidity();\n  }\n\n}\n\n    \n\n    \n        \n  {{addressLabelText}}\n  \n  \n    {{requiredErrorText}}\n  \n  \n    {{invalidErrorText}}\n  \n\n\n    \n\n    \n                \n                    ./mat-google-maps-autocomplete.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{addressLabelText}}        {{requiredErrorText}}        {{invalidErrorText}}  '\n    var COMPONENTS = [{'name': 'MatGoogleMapsAutocompleteComponent', 'selector': 'mat-google-maps-autocomplete'}];\n    var DIRECTIVES = [{'name': 'MatGoogleMapsAutocompleteDirective', 'selector': '[matGoogleMapsAutocomplete]'},{'name': 'MatValidateAddressDirective', 'selector': '[mat-address-validate][formControlName],[MatValidateAddress][formControl],[MatValidateAddress][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MatGoogleMapsAutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MatGoogleMapsAutocompleteDirective.html":{"url":"directives/MatGoogleMapsAutocompleteDirective.html","title":"directive - MatGoogleMapsAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MatGoogleMapsAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/directives/mat-google-maps-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [matGoogleMapsAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressSearchControl\n                            \n                            \n                                    Private\n                                addressValidator\n                            \n                            \n                                    Public\n                                elemRef\n                            \n                            \n                                    Public\n                                mapsAPILoader\n                            \n                            \n                                    Private\n                                onNewPlaceResult\n                            \n                            \n                                    Public\n                                platformId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initGoogleMapsAutocomplete\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                autoCompleteOptions\n                            \n                            \n                                country\n                            \n                            \n                                placeIdOnly\n                            \n                            \n                                strictBounds\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onAutocompleteSelected\n                            \n                            \n                                onChange\n                            \n                            \n                                onLocationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string, elemRef: ElementRef, mapsAPILoader: MapsAPILoader, _ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elemRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :     PlaceResult | string\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoCompleteOptions\n                    \n                \n                \n                    \n                        Type :     AutocompleteOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeIdOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strictBounds\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        types\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:29\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onAutocompleteSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLocationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:44\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initGoogleMapsAutocomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initGoogleMapsAutocomplete()\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressSearchControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl({value: null}, Validators.compose([\n    Validators.required,\n    this.addressValidator.validate()])\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addressValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatValidateAddressDirective\n\n                        \n                    \n                    \n                        \n                            Default value : new MatValidateAddressDirective()\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elemRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapsAPILoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapsAPILoader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onNewPlaceResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platformId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(PLATFORM_ID)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/mat-google-maps-autocomplete.directive.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, EventEmitter, Inject, Input, NgZone, OnInit, Output, PLATFORM_ID} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatValidateAddressDirective} from '../directives/address-validator/mat-address-validator.directive';\nimport {MapsAPILoader} from '@agm/core';\nimport {Location} from '../interfaces/location.interface';\nimport PlaceResult = google.maps.places.PlaceResult;\nimport AutocompleteOptions = google.maps.places.AutocompleteOptions;\nimport {isPlatformBrowser} from '@angular/common';\n\n@Directive({\n  selector: '[matGoogleMapsAutocomplete]',\n  exportAs: 'matGoogleMapsAutocomplete',\n})\nexport class MatGoogleMapsAutocompleteDirective implements OnInit {\n\n  @Input()\n  address: PlaceResult | string;\n\n  @Input()\n  country: string | string[];\n\n  @Input()\n  placeIdOnly?: boolean;\n\n  @Input()\n  strictBounds?: boolean;\n\n  @Input()\n  types?: string[];\n\n  @Input()\n  type?: string;\n\n  @Input()\n  autoCompleteOptions: AutocompleteOptions = {};\n\n  @Output()\n  onChange: EventEmitter = new EventEmitter();\n\n  @Output()\n  onAutocompleteSelected: EventEmitter = new EventEmitter();\n\n  @Output()\n  onLocationSelected: EventEmitter = new EventEmitter();\n\n  private onNewPlaceResult: EventEmitter = new EventEmitter();\n  private addressValidator: MatValidateAddressDirective = new MatValidateAddressDirective();\n\n  public addressSearchControl: FormControl = new FormControl({value: null}, Validators.compose([\n    Validators.required,\n    this.addressValidator.validate()])\n  );\n\n  constructor(@Inject(PLATFORM_ID) public platformId: string,\n              public elemRef: ElementRef,\n              public mapsAPILoader: MapsAPILoader,\n              private _ngZone: NgZone) {\n  }\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.addressValidator.subscribe(this.onNewPlaceResult);\n      const options: any = {\n        // types: ['address'],\n        // componentRestrictions: {country: this.country},\n        placeIdOnly: this.placeIdOnly,\n        strictBounds: this.strictBounds,\n        // types: this.types,\n        type: this.type\n      };\n\n      // tslint:disable-next-line:no-unused-expression\n      this.country ? options.push({componentRestrictions: {country: this.country}}) : null;\n      // tslint:disable-next-line:no-unused-expression\n      this.country ? options.push({types: this.types}) : null;\n\n      this.autoCompleteOptions = Object.assign(this.autoCompleteOptions, options);\n      this.initGoogleMapsAutocomplete();\n    }\n\n  }\n\n  public initGoogleMapsAutocomplete() {\n    this.mapsAPILoader\n      .load()\n      .then(() => {\n        const autocomplete = new google.maps.places.Autocomplete(this.elemRef.nativeElement, this.autoCompleteOptions);\n        autocomplete.addListener('place_changed', () => {\n          this._ngZone.run(() => {\n            // get the place result\n            const place: PlaceResult = autocomplete.getPlace();\n\n            if (!place.place_id || place.geometry === undefined || place.geometry === null) {\n              // place result is not valid\n              return;\n            } else {\n              // show dialog to select a address from the input\n              // emit failed event\n            }\n            this.address = place.formatted_address;\n            this.onAutocompleteSelected.emit(place);\n            this.onLocationSelected.emit(\n              {\n                latitude: place.geometry.location.lat(),\n                longitude: place.geometry.location.lng()\n              })\n          });\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatGoogleMapsAutocompleteModule.html":{"url":"modules/MatGoogleMapsAutocompleteModule.html","title":"module - MatGoogleMapsAutocompleteModule","body":"\n                   \n\n\n\n\n    Modules\n    MatGoogleMapsAutocompleteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatGoogleMapsAutocompleteModule\n\n\n\ncluster_MatGoogleMapsAutocompleteModule_declarations\n\n\n\ncluster_MatGoogleMapsAutocompleteModule_exports\n\n\n\n\nMatGoogleMapsAutocompleteComponent\n\nMatGoogleMapsAutocompleteComponent\n\n\n\nMatGoogleMapsAutocompleteModule\n\nMatGoogleMapsAutocompleteModule\n\nMatGoogleMapsAutocompleteModule -->\n\nMatGoogleMapsAutocompleteComponent->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatGoogleMapsAutocompleteDirective\n\nMatGoogleMapsAutocompleteDirective\n\nMatGoogleMapsAutocompleteModule -->\n\nMatGoogleMapsAutocompleteDirective->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatValidateAddressDirective\n\nMatValidateAddressDirective\n\nMatGoogleMapsAutocompleteModule -->\n\nMatValidateAddressDirective->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatGoogleMapsAutocompleteComponent \n\nMatGoogleMapsAutocompleteComponent \n\nMatGoogleMapsAutocompleteComponent  -->\n\nMatGoogleMapsAutocompleteModule->MatGoogleMapsAutocompleteComponent \n\n\n\n\n\nMatGoogleMapsAutocompleteDirective \n\nMatGoogleMapsAutocompleteDirective \n\nMatGoogleMapsAutocompleteDirective  -->\n\nMatGoogleMapsAutocompleteModule->MatGoogleMapsAutocompleteDirective \n\n\n\n\n\nMatValidateAddressDirective \n\nMatValidateAddressDirective \n\nMatValidateAddressDirective  -->\n\nMatGoogleMapsAutocompleteModule->MatValidateAddressDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/mat-google-maps-autocomplete.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatGoogleMapsAutocompleteComponent\n                        \n                        \n                            MatGoogleMapsAutocompleteDirective\n                        \n                        \n                            MatValidateAddressDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatGoogleMapsAutocompleteComponent\n                        \n                        \n                            MatGoogleMapsAutocompleteDirective\n                        \n                        \n                            MatValidateAddressDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/module/mat-google-maps-autocomplete.module.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {MatGoogleMapsAutocompleteComponent} from './component/mat-google-maps-autocomplete.component';\nimport {MatInputModule} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatValidateAddressDirective} from './directives/address-validator/mat-address-validator.directive';\nimport {MatGoogleMapsAutocompleteDirective} from './directives/mat-google-maps-autocomplete.directive';\n\n// Export module's public API\nexport {MatGoogleMapsAutocompleteComponent, Appearance} from './component/mat-google-maps-autocomplete.component';\nexport {MatValidateAddressDirective} from './directives/address-validator/mat-address-validator.directive';\nexport {MatGoogleMapsAutocompleteDirective} from './directives/mat-google-maps-autocomplete.directive';\nexport {Location} from './interfaces/location.interface';\n\n// export {MatValidateAddressDirective} from './directives/address-validator/mat-address-validator.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule\n  ],\n  exports: [\n    MatGoogleMapsAutocompleteComponent,\n    MatGoogleMapsAutocompleteDirective,\n    MatValidateAddressDirective\n  ],\n  declarations: [\n    MatGoogleMapsAutocompleteComponent,\n    MatGoogleMapsAutocompleteDirective,\n    MatValidateAddressDirective\n  ]\n})\nexport class MatGoogleMapsAutocompleteModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MatGoogleMapsAutocompleteModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MatValidateAddressDirective.html":{"url":"directives/MatValidateAddressDirective.html","title":"directive - MatValidateAddressDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MatValidateAddressDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/directives/address-validator/mat-address-validator.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => MatValidateAddressDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [mat-address-validate][formControlName],[MatValidateAddress][formControl],[MatValidateAddress][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _address\n                            \n                            \n                                    Public\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    address\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe(eventEmitter: EventEmitter)\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventEmitter\n                                    \n                                            EventEmitter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate()\n                \n            \n\n\n            \n                \n                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PlaceResult\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n\n                \n                    \n                        getaddress()\n                    \n                \n                            \n                                \n                                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:43\n                                \n                            \n\n                \n                    \n                        setaddress(value)\n                    \n                \n                            \n                                \n                                    Defined in src/module/directives/address-validator/mat-address-validator.directive.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Directive, EventEmitter, forwardRef} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn} from '@angular/forms';\nimport PlaceResult = google.maps.places.PlaceResult;\n\n// https://github.com/angular/angular/blob/master/packages/forms/src/directives/validators.ts\n\n@Directive({\n  selector: '[mat-address-validate][formControlName],[MatValidateAddress][formControl],[MatValidateAddress][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => MatValidateAddressDirective), multi: true}\n  ]\n})\nexport class MatValidateAddressDirective implements Validator {\n\n  public subscription: any;\n\n  private _address: PlaceResult;\n\n\n  constructor() {\n  }\n\n  public validate(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | any => {\n      return this.address ? null : {\n        validateAddress: {\n          valid: false\n        }\n      };\n    }\n  }\n\n  public subscribe(eventEmitter: EventEmitter) {\n    this.subscription = eventEmitter.subscribe((address: PlaceResult) => {\n      this.address = address;\n    });\n  }\n\n  public unsubscribe() {\n    this.subscription.unsubscribe();\n  }\n\n  get address() {\n    return this._address;\n  }\n\n  set address(value) {\n    this._address = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/testing/mock-ng-zone.ts\n        \n\n            \n                Description\n            \n            \n                Mock synchronous NgZone implementation that can be used\nto flush out onStable subscriptions in tests.\nvia: https://github.com/angular/angular/blob/master/packages/core/testing/src/ng_zone_mock.ts\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/module/testing/mock-ng-zone.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/module/testing/mock-ng-zone.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/module/testing/mock-ng-zone.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in src/module/testing/mock-ng-zone.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/module/testing/mock-ng-zone.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, NgZone} from '@angular/core';\n\n\n/**\n * Mock synchronous NgZone implementation that can be used\n * to flush out `onStable` subscriptions in tests.\n *\n * via: https://github.com/angular/angular/blob/master/packages/core/testing/src/ng_zone_mock.ts\n * @docs-private\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({enableLongStackTrace: false});\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n1.6.0 (2019-05-04)\nBug Fixes\n\ndemo: downgraded @angular/platform-browser to v7.2.12 (80f2005)\ndemo: updated angular and other dependencies (02fb365)\ndemo: updated angular and other dependencies (59d34a7)\ndemo-schematics: minor #69 (7a1804a)\npackage: added @angular-devkit/schematics as dev dependency #69 (6ec7bb1)\npackage: minor #69 (dd10b9b)\npackage: prevent invalid value error for the directive as well #100 (8ebe3fb)\npackage: prevent invalid value error when type or country are null #100 (80014cd)\npackage: updated postcss and rollup (eca3761)\npackage: updated rollup to v1 (98125e2)\npackage: updated the schematics #69 (9281882)\n\nFeatures\n\ndemo-schematics: added a brand new demo app for angular schematics (5ad3513)\n\n1.5.0 (2019-04-02)\nBug Fixes\n\ndemo: updated angular cdk and material to 7.3.4 (bf4af44)\ndemo: updated angular to v7.3.1 (15526c1)\ndemo: updated angular, material and other deps (ea16bb7)\ndemo: updated dependencies (4238e7d)\ndemo: updated dependencies, angular to v7.2.0 and material to v7.2.1 (a025c26)\ndemo: updated dependencies, angular to v7.2.0 and material to v7.2.1 (a4378f1)\ndemo: updated reflect metadata (7ef4da6)\ndocs: replaced onAddressSelected with onAutocompleteSelected - typo error #40 (1f88ec6)\npackage: added angular schematics (ab59926)\npackage: downgraded jest (f428a82)\npackage: initialize the autocomplete mechanism only in the browser - SSR (7519b8c)\npackage: updated angular material and other deps (c9feeff)\npackage: updated angular to v7.3.1 (5884951)\npackage: updated angular to v7.3.4 (a5f08ac)\npackage: updated jest (d180485)\npackage: updated postcss to v7.0.13 (4058ad9)\n\nFeatures\n\ndemo: updated angular and other dependencies (446bc32)\npackage: added schematics support #69 (7c145d7)\npackage: updated angular and other dependencies (69b6513)\n\n1.4.0 (2018-11-02)\nFeatures\n\npackage: support of angular v7 (22b1bd5)\n\n1.3.0 (2018-10-03)\nBug Fixes\n\npackage: fixed the path of node_module in the npm script to transpile agm core via babel (abeb505)\npackage: unexpected token import from agm core module fixed via babel v7.1.0 (5c6a295)\npackage: updated dependencies (8a41a4c)\npackage: updated typescript to v2.9.2 (66d1e24)\n\nFeatures\n\npackage: added address validator's form control to 'matGoogleMapsAutocomplete' (859c103)\npackage: simplify the library by adding the matGoogleMapsAutocomplete directive (f2b7b63)\n\n1.2.2 (2018-07-24)\nBug Fixes\n\npackage: added agm/core module to external modules for rollup (95046fd)\n\n1.2.1 (2018-07-18)\nBug Fixes\n\npackage: added dual binding for the placeholder and removed html content from inputs (78f88ca)\npackage: solved all lint errors (551743a)\n\n1.2.0 (2018-07-10)\nFeatures\n\npackage: added the appearance input to style the address mat-form-field #5 (9cf1106)\n\n1.1.0 (2018-06-30)\nFeatures\n\npackage: added additional input for mat-google-maps-autocomplete` (6f91889)\n\n1.0.0 (2018-06-18)\nBug Fixes\n\npackage: the assets path (6f0e24c)\n\nFeatures\n\npackage: added MatGoogleMapsAutocompleteComponent | mat-google-maps-autocomplete (5584cae)\npackage: added MatGoogleMapsAutocompleteModule (dadcddd)\npackage: added MatValidateAddressDirective | matValidateAddress (60e44cd)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.5\n        \n            @angular/animations : ^7.2.14\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.14\n        \n            @angular/core : ^7.2.14\n        \n            @angular/forms : ^7.2.14\n        \n            @angular/material : ^7.3.7\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Appearance   (src/.../mat-google-maps-autocomplete.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/module/component/mat-google-maps-autocomplete.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Appearance\n                    \n                \n                        \n                            \n                                 STANDARD\n                            \n                        \n                        \n                            \n                                Value : standard\n                            \n                        \n                        \n                            \n                                 FILL\n                            \n                        \n                        \n                            \n                                Value : fill\n                            \n                        \n                        \n                            \n                                 OUTLINE\n                            \n                        \n                        \n                            \n                                Value : outline\n                            \n                        \n                        \n                            \n                                 LEGACY\n                            \n                        \n                        \n                            \n                                Value : legacy\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addModuleToImports   (src/.../index.ts)\n                        \n                        \n                            addPackageJsonDependencies   (src/.../index.ts)\n                        \n                        \n                            getPackageVersionFromPackageJson   (src/.../index.ts)\n                        \n                        \n                            installPackageJsonDependencies   (src/.../index.ts)\n                        \n                        \n                            loadPackageVersionGracefully   (src/.../index.ts)\n                        \n                        \n                            Unnamed function   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schematics/src/ng-add/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addModuleToImports\n                        \n                        \n                    \n                \n            \n            \n                \naddModuleToImports(options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPackageVersionFromPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetPackageVersionFromPackageJson(tree, name)\n                \n            \n\n\n\n\n            \n                \n                    Gets the version of the specified package by looking at the package.json in the given tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPackageVersionGracefully\n                        \n                        \n                    \n                \n            \n            \n                \nloadPackageVersionGracefully(context)\n                \n            \n\n\n\n\n            \n                \n                    Loads the full version from the given Angular package gracefully. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@angular-material-extensions/google-maps-autocomplete - Autocomplete input component for google-maps built with angular material design\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\nStating with v1.3.0, you can now use this library without material2's dependency! To\nenable this goolgle maps autocomplate api as feature, you can just add matGoogleMapsAutocomplete \nto any html input element! \nBuilt by and for developers :heart:\nDo you have any question or suggestion ? Please do not hesitate to contact us!\nAlternatively, provide a PR | open an appropriate issue here\nIf did you like this project, support angular-material-extensions \nby starring :star: and sharing it :loudspeaker:\nTable of Contents\n\nDemo\nDependencies\nPeer Dependencies\nAdditional Requirements - material (Include a theme)\nInstallation\nUsage\nDocumentation\nRun Demo App Locally\nDevelopment\nOther Angular Libraries\nSupport\nLicense\n\n\n\nDemo\nView all the directives and components in action at https://angular-material-extensions.github.io/google-maps-autocomplete\n\n\nDependencies\n\nAngular (requires Angular 2 or higher)\n\nfor the directive as standalone you just need to install the agm core module\n- agm - angular google maps v1.0.0-beta.5\nbash\nnpm i @agm/core\noptional\nbash\nnpm i -D @types/googlemaps\n\n\nInstallation\n1. Install via ng add. (Recommended)\nIf Angular Material Design is not setup, just run ng add @angular/material learn more\nNow add the library via the angular schematics and everything will be setup for you\nshell\nng add @angular-material-extensions/google-maps-autocomplete\n2. Install via npm. (Alternative)\nNow install @angular-material-extensions/google-maps-autocomplete via:\nshell\nnpm install --save @angular-material-extensions/google-maps-autocomplete\n\n\nRequirements (peer dependencies):\nfor the ui input component, please consider to install the following packages\n- angular animations v7.x\n- angular forms v7.x\nif your are not using the directive but the mat-google-maps-autocomplete component\n- angular material v7.x\n- angular cdk v7.x\nbash\nnpm i @angular/cdk @angular/material @angular/animations @angular/forms\n\n\nAdditional requirements Theme (Material Design)\n\nangular material theme\n\n\nSystemJS\n\nNote:If you are using SystemJS, you should adjust your configuration to point to the UMD bundle.\nIn your systemjs config file, map needs to tell the System loader where to look for @angular-material-extensions/google-maps-autocomplete:\n```js\nmap: {\n  '@angular-material-extensions/google-maps-autocomplete': 'node_modules/@angular-material-extensions/google-maps-autocomplete/bundles/google-maps-autocomplete.umd.js',\n}\n\n```\nOnce installed you need to import the main module:\njs\nimport { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';\nThe only remaining part is to list the imported module in your application module. The exact method will be slightly\ndifferent for the root (top-level) module for which you should end up with the code similar to (notice MatGoogleMapsAutocompleteModule.forRoot()):\n```js\nimport { AgmCoreModule } from '@agm/core';\nimport { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n     AgmCoreModule.forRoot({\n          apiKey: 'YOUR_KEY'\n        }),\n     MatGoogleMapsAutocompleteModule.forRoot(), ...],  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n```\nOther modules in your application can simply import MatGoogleMapsAutocompleteModule:\n```js\nimport { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';\n@NgModule({\n  declarations: [OtherComponent, ...],\n  imports: [\n     MatGoogleMapsAutocompleteModule, ...], \n})\nexport class OtherModule {\n}\n```\n\n\nUsage\nAs directive\nadd matGoogleMapsAutocomplete to your target html input element to enable the google maps autocomplete api as feature\nhtml\n\n  Address >\n  \n\nAs components\nor alternatively use mat-google-maps-auto-complete, the UI wrapper\nadd mat-google-maps-auto-complete element to your template\nmat-google-maps-auto-complete\nhtml\n\n      \nA customized mat-google-maps-autocomplete \nhtml\n\n\ncombine the result of the mat-google-maps-autocomplete with a google map instance via @agm\n```html\n\n\n\n  \n    \n  \n\n\n\n  \n  \n  \n```\n\n\nin your component, the code will be similar to --> \n```typescript\nimport {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Title} from '@angular/platform-browser';\nimport {Location, Appearance} from '@angular-material-extensions/google-maps-autocomplete';\nimport {} from '@types/googlemaps';\nimport PlaceResult = google.maps.places.PlaceResult;\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent implements OnInit {\n  public appearance = Appearance;\n  public zoom: number;\n  public latitude: number;\n  public longitude: number;\n  public selectedAddress: PlaceResult;\n  constructor(private titleService: Title) {\n  }\n  ngOnInit() {\n    this.titleService.setTitle('Home | @angular-material-extensions/google-maps-autocomplete');\nthis.zoom = 10;\nthis.latitude = 52.520008;\nthis.longitude = 13.404954;\n\nthis.setCurrentPosition();  }\n  private setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n        this.zoom = 12;\n      });\n    }\n  }\n  onAutocompleteSelected(result: PlaceResult) {\n    console.log('onAutocompleteSelected: ', result);\n  }\n  onLocationSelected(location: Location) {\n    console.log('onLocationSelected: ', location);\n    this.latitude = location.latitude;\n    this.longitude = location.longitude;\n  }\n}\n```\n\n\nAPI - for more info please visit the official documentation Maps JavaScript API\nmatGoogleMapsAutocomplete\n| option | bind  |  type  |   default    | description  |\n|:-------------------|:--------:|:------:|:------------:|:-------------------------------------------------------------------------------------------------|| address             | Input()   |  PlaceResult | string;      | - || country             | Input()   | string | string[];          | - | can be used to restrict results to specific groups. Currently, you can use componentRestrictions to filter by up to 5 countries. Countries must be passed as as a two-character, ISO 3166-1 Alpha-2 compatible country code. Multiple countries must be passed as a list of country codes.| placeIdOnly         | Input()   | boolean                     | - | can be used to instruct the Autocomplete widget to retrieve only Place IDs. On calling getPlace() on the Autocomplete object, the PlaceResult made available will only have the place id, types and name properties set. You can use the returned place ID with calls to the Places, Geocoding, Directions or Distance Matrix services.\n| strictBounds        | Input()   | boolean                     | - | is a boolean specifying whether the API must return only those places that are strictly within the region defined by the given bounds. The API does not return results outside this region even if they match the user input.\n| types               | Input()   | string[]                    | - |  An array of types specifies an explicit type or a type collection, as listed in the supported types below. If nothing is specified, all types are returned. In general only a single type is allowed. The exception is that you can safely mix the geocode and establishment types, but note that this will have the same effect as specifying no types. The supported types are:\n                                                                       geocode instructs the Places service to return only geocoding results, rather than business results.\n                                                                       address instructs the Places service to return only geocoding results with a precise address.\n                                                                       establishment instructs the Places service to return only business results.\n                                                                       the (regions) type collection instructs the Places service to return any result matching the following types:\n                                                                       locality\n                                                                       sublocality\n                                                                       postal_code\n                                                                       country\n                                                                       administrative_area1\n                                                                       administrative_area2\n                                                                       the (cities) type collection instructs the Places service to return results that match either locality or administrative_area3.\n| type                | Input()   | string                      | - || autoCompleteOptions | Input()   | AutocompleteOptions         | - |  all above inputs in one object! The passed data to this object will be merged with the input if they exists\n| onChange            | Output()  | PlaceResult | string | null | - |  event when the input form value changed\n| onAutocompleteSelected   | Output()  | PlaceResult            | - |  the event will be fired when a\n| onLocationSelected  | Output()  | Location                    | - |  \nmat-google-maps-autocomplete\neverything included in matGoogleMapsAutocomplete + the following\n| option | bind  |  type  |   default    | description  |\n|:-------------------|:--------:|:------:|:------------:|:-------------------------------------------------------------------------------------------------|| addressLabelText  | Input()   |  string;      | Address using the component |  self explanatory\n| placeholderText  | Input()   |  string;      | Please enter the address |  self explanatory\n| requiredErrorText  | Input()   |  string;      | The address is required |  self explanatory\n| invalidErrorText  | Input()   |  string;      | The address is not valid |  self explanatory\n| appearance          | Input()   |  Appearance | string;      | Appearance.STANDARD |  Style the mat-form-field by setting the appearance option : standard, fill, outline or legacy\n\n\nDocumentation\nPlease checkout the full documentation here \nor follow the official tutorial\n\n\nRun Demo App Locally\n\nclone this repo by running\nbash\n$ git clone https://github.com/angular-material-extensions/google-maps-autocomplete.git\n\nlink the @angular-material-extensions/google-maps-autocomplete package\n\n\nbash\n$ gulp link\n\nnavigate to the demo app directory, install the dependencies and serve the app\nbash\n$ cd demo && npm i && npm start\n\nthe app is now hosted by http://localhost:4200/\n\n\n\n\nDevelopment\n\nclone this repo\nInstall the dependencies by running npm i\nbuild the library npm run build or gulp build\n\nbash\n$ npm run build\n\nLink the library \nbash\n$ gulp link\n\n\nNavigate to the demo app's directory\ncd demo\n_ npm i\n_ npm start\n\n\n\n\n\nOther Angular Libraries\n\nngx-auth-firebaseui\nngx-linkifyjs\n@firebaseui/ng-bootstrap\n@angular-material-extensions/pages\n@angular-material-extensions/link-preview\n@angular-material-extensions/password-strength\n@angular-material-extensions/faq\n@angular-material-extensions/contacts\n@angular-material-extensions/combination-generator\n\n\n\nSupport\n\nDrop an email to: Anthony Nahas\n\nor open an appropriate issue\n\nlet us chat on Gitter\nBuilt by and for developers :heart: we will help you :punch:\n\n\nLicense\nCopyright (c) 2019 Anthony Nahas. Licensed under the MIT License (MIT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Anthony Nahas\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MatGoogleMapsAutocompleteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatGoogleMapsAutocompleteModule\n\n\n\ncluster_MatGoogleMapsAutocompleteModule_declarations\n\n\n\ncluster_MatGoogleMapsAutocompleteModule_exports\n\n\n\n\nMatGoogleMapsAutocompleteComponent\n\nMatGoogleMapsAutocompleteComponent\n\n\n\nMatGoogleMapsAutocompleteModule\n\nMatGoogleMapsAutocompleteModule\n\nMatGoogleMapsAutocompleteModule -->\n\nMatGoogleMapsAutocompleteComponent->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatGoogleMapsAutocompleteDirective\n\nMatGoogleMapsAutocompleteDirective\n\nMatGoogleMapsAutocompleteModule -->\n\nMatGoogleMapsAutocompleteDirective->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatValidateAddressDirective\n\nMatValidateAddressDirective\n\nMatGoogleMapsAutocompleteModule -->\n\nMatValidateAddressDirective->MatGoogleMapsAutocompleteModule\n\n\n\n\n\nMatGoogleMapsAutocompleteComponent \n\nMatGoogleMapsAutocompleteComponent \n\nMatGoogleMapsAutocompleteComponent  -->\n\nMatGoogleMapsAutocompleteModule->MatGoogleMapsAutocompleteComponent \n\n\n\n\n\nMatGoogleMapsAutocompleteDirective \n\nMatGoogleMapsAutocompleteDirective \n\nMatGoogleMapsAutocompleteDirective  -->\n\nMatGoogleMapsAutocompleteModule->MatGoogleMapsAutocompleteDirective \n\n\n\n\n\nMatValidateAddressDirective \n\nMatValidateAddressDirective \n\nMatValidateAddressDirective  -->\n\nMatGoogleMapsAutocompleteModule->MatValidateAddressDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
